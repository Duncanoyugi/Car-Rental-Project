generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String    @id @default(uuid())
  fullName           String
  email              String    @unique
  password           String
  phoneNumber        String?
  role               Role      @default(CUSTOMER)
  profileImage       String?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  isEmailVerified    Boolean   @default(false)
  emailVerifyToken   String?
  resetToken         String?
  resetTokenExpiry   DateTime?
  mustChangePassword Boolean   @default(false)
  isBlocked          Boolean   @default(false)
  bookings           Booking[]
  reviews            Review[]
}

model Vehicle {
  id            String    @id @default(uuid())
  title         String
  category      String
  pricePerDay   Float
  features      String[]
  imageUrls     String[]
  availableFrom DateTime
  availableTo   DateTime
  location      String
  createdBy     String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  bookings      Booking[]
  reviews       Review[]
}

model Booking {
  id         String        @id @default(uuid())
  userId     String
  vehicleId  String
  startDate  DateTime
  endDate    DateTime
  status     BookingStatus @default(PENDING)
  createdAt  DateTime      @default(now())
  totalPrice Float?

  user    User     @relation(fields: [userId], references: [id])
  vehicle Vehicle  @relation(fields: [vehicleId], references: [id])
  payment Payment? @relation("BookingPayment") // ✅ Add this line
}

model Review {
  id        String   @id @default(uuid())
  rating    Int
  comment   String
  userId    String
  vehicleId String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])
}

model Payment {
  id        String   @id @default(uuid())
  bookingId String   @unique
  amount    Float
  method    String
  status    String   @default("PENDING")
  createdAt DateTime @default(now())

  booking Booking @relation("BookingPayment", fields: [bookingId], references: [id]) // ✅ Add relation name
}

enum Role {
  ADMIN
  AGENT
  CUSTOMER
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}
